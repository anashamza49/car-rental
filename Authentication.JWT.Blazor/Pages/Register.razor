@page "/register"
@using Authentication.JWT.Blazor.DTOs
@using Authentication.JWT.Blazor.Services
@inject AuthService AuthService
@inject NavigationManager Navigation

<div class="register-container">
    <h3 class="register-title">Create Account</h3>

    <EditForm Model="@registerDto" OnValidSubmit="@HandleRegister">
        <DataAnnotationsValidator />

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="validation-summary">
                @errorMessage
            </div>
        }

        <ValidationSummary class="validation-summary" />

        <div class="form-group">
            <label for="username">Username</label>
            <InputText id="username" @bind-Value="registerDto.Username" class="form-control" />
            <ValidationMessage For="@(() => registerDto.Username)" class="validation-message" />
        </div>

        <div class="form-group">
            <label for="email">Email</label>
            <InputText id="email" @bind-Value="registerDto.Email" class="form-control" />
            <ValidationMessage For="@(() => registerDto.Email)" class="validation-message" />
        </div>

        <div class="form-group">
            <label for="password">Password</label>
            <InputText id="password" type="password" @bind-Value="registerDto.Password" class="form-control" />
            <ValidationMessage For="@(() => registerDto.Password)" class="validation-message" />
        </div>

        <div class="form-group">
            <label for="role">Role</label>
            <InputSelect id="role" @bind-Value="registerDto.Role" class="form-control">
                <option value="Employee">Employee</option>
                <option value="Admin">Admin</option>
            </InputSelect>
            <ValidationMessage For="@(() => registerDto.Role)" class="validation-message" />
        </div>

        <button type="submit" class="btn-primary">Register</button>
    </EditForm>

    <a href="/login" class="login-link">Already have an account? <span>Sign in</span></a>
</div>

@code {
    private RegisterDto registerDto = new() { Role = "Employee" };
    private string errorMessage = string.Empty;

    private async Task HandleRegister()
    {
        var result = await AuthService.Register(registerDto);

        if (result.Success)
            Navigation.NavigateTo("/login");
        else{}
    }
}
